{"ast":null,"code":"var _jsxFileName = \"/Users/radu.silaghi/Documents/Projects/clearscore/src/Components/IdeasList.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport '../App.css';\n\nclass IdeasList extends Component {\n  render() {\n    return React.createElement(\"ul\", {\n      className: \"ideasList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, Object.keys(this.props.ideas).map(function (key) {\n      const no = this.props.ideas[key].text.length;\n      const options = {\n        hour12: true,\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\"\n      };\n      const timestamp = [];\n      timestamp[key] = new Date().toLocaleTimeString(\"en-US\", options);\n      return React.createElement(\"li\", {\n        className: \"idea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"idea title...\",\n        className: \"idea__title\",\n        onChange: evt => {\n          this.props.handleChangeContent(key, evt, 'title');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"idea__text\",\n        placeholder: \"idea text...\",\n        onChange: evt => {\n          this.props.handleChangeContent(key, evt, 'text');\n        },\n        maxLength: \"140\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, timestamp), React.createElement(\"span\", {\n        className: classNames('idea__counter', no === 140 ? 'idea__counter--alert' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, no, \"/140\"));\n    }.bind(this)));\n  }\n\n}\n\nIdeasList.propTypes = {\n  ideas: PropTypes.shape(),\n  handleChangeContent: PropTypes.func\n};\nIdeasList.defaultProps = {\n  ideas: {},\n  handleChangeContent: () => {}\n};\nexport default IdeasList;","map":{"version":3,"sources":["/Users/radu.silaghi/Documents/Projects/clearscore/src/Components/IdeasList.jsx"],"names":["React","Component","PropTypes","classNames","IdeasList","render","Object","keys","props","ideas","map","key","no","text","length","options","hour12","hour","minute","second","timestamp","Date","toLocaleTimeString","evt","handleChangeContent","bind","propTypes","shape","func","defaultProps"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,YAAP;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAGhCI,EAAAA,MAAM,GAAG;AAEP,WACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,KAAvB,EAA8BC,GAA9B,CAAkC,UAASC,GAAT,EAAc;AAC9C,YAAMC,EAAE,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBE,GAAjB,EAAsBE,IAAtB,CAA2BC,MAAtC;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAG,IADK;AAEdC,QAAAA,IAAI,EAAG,SAFO;AAGdC,QAAAA,MAAM,EAAE,SAHM;AAIfC,QAAAA,MAAM,EAAE;AAJO,OAAhB;AAMA,YAAMC,SAAS,GAAG,EAAlB;AACAA,MAAAA,SAAS,CAACT,GAAD,CAAT,GAAiB,IAAIU,IAAJ,GAAWC,kBAAX,CAA8B,OAA9B,EAAsCP,OAAtC,CAAjB;AACA,aACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,eAFd;AAGE,QAAA,SAAS,EAAC,aAHZ;AAIE,QAAA,QAAQ,EAAGQ,GAAD,IAAS;AAAC,eAAKf,KAAL,CAAWgB,mBAAX,CAA+Bb,GAA/B,EAAoCY,GAApC,EAAyC,OAAzC;AAAkD,SAJxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,QAAQ,EAAGA,GAAD,IAAS;AAAC,eAAKf,KAAL,CAAWgB,mBAAX,CAA+Bb,GAA/B,EAAoCY,GAApC,EAAyC,MAAzC;AAAiD,SAHvE;AAIE,QAAA,SAAS,EAAC,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOH,SAAP,CAbF,EAcE;AAAM,QAAA,SAAS,EAAEjB,UAAU,CAAC,eAAD,EAAkBS,EAAE,KAAK,GAAP,GAAa,sBAAb,GAAsC,EAAxD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyFA,EAAzF,SAdF,CADF;AAiBD,KA3BiC,CA2BhCa,IA3BgC,CA2B3B,IA3B2B,CAAlC,CAFJ,CADF;AAkCD;;AAvC+B;;AAyClCrB,SAAS,CAACsB,SAAV,GAAsB;AACpBjB,EAAAA,KAAK,EAAEP,SAAS,CAACyB,KAAV,EADa;AAEpBH,EAAAA,mBAAmB,EAAEtB,SAAS,CAAC0B;AAFX,CAAtB;AAIAxB,SAAS,CAACyB,YAAV,GAAyB;AACvBpB,EAAAA,KAAK,EAAE,EADgB;AAEvBe,EAAAA,mBAAmB,EAAE,MAAM,CAAE;AAFN,CAAzB;AAIA,eAAepB,SAAf","sourcesContent":["  \nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport '../App.css';\n\nclass IdeasList extends Component {\n  \n\n  render() {\n   \n    return (\n      <ul className='ideasList'> \n        {\n          Object.keys(this.props.ideas).map(function(key) {\n            const no = this.props.ideas[key].text.length;\n            const options = {\n              hour12 : true,\n              hour:  \"2-digit\",\n              minute: \"2-digit\",\n             second: \"2-digit\"\n           }\n            const timestamp = [];\n            timestamp[key] = new Date().toLocaleTimeString(\"en-US\",options);\n            return (\n              <li className='idea'>\n                <input \n                  type='text' \n                  placeholder='idea title...' \n                  className='idea__title' \n                  onChange={(evt) => {this.props.handleChangeContent(key, evt, 'title')}}\n                />\n                <textarea \n                  className='idea__text' \n                  placeholder='idea text...' \n                  onChange={(evt) => {this.props.handleChangeContent(key, evt, 'text')}}\n                  maxLength='140'\n                />\n                <span>{timestamp}</span>\n                <span className={classNames('idea__counter', no === 140 ? 'idea__counter--alert' : '')}>{no}/140</span>\n              </li>);\n          }.bind(this))\n        }\n      </ul>\n    )\n  }\n}\nIdeasList.propTypes = {\n  ideas: PropTypes.shape(),\n  handleChangeContent: PropTypes.func\n}\nIdeasList.defaultProps = {\n  ideas: {},\n  handleChangeContent: () => {}\n}\nexport default IdeasList;"]},"metadata":{},"sourceType":"module"}