{"ast":null,"code":"var _jsxFileName = \"/Users/radu.silaghi/Documents/Projects/clearscore/src/Components/IdeasList.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport '../App.css';\n\nclass IdeasList extends Component {\n  render() {\n    return React.createElement(\"ul\", {\n      className: \"ideasList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, Object.keys(this.props.ideas).map(function (key) {\n      const no = this.props.ideas[key].text.length;\n      return React.createElement(\"li\", {\n        className: \"idea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"idea title...\",\n        className: \"idea__title\",\n        onChange: evt => {\n          this.props.handleChangeContent(key, evt, 'title');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"idea__text\",\n        placeholder: \"idea text...\" // onChange={no<140 ? (evt) => {this.props.handleChangeContent(key, evt, 'text')} : () => {}}\n        ,\n        onChange: evt => {\n          this.props.handleChangeContent(key, evt, 'text');\n        },\n        maxLength: \"140\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: classNames('idea__counter', no === 140 ? 'idea__counter--alert' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, no, \"/140\"));\n    }.bind(this)));\n  }\n\n}\n\nIdeasList.propTypes = {\n  ideas: PropTypes.shape(),\n  handleChangeContent: PropTypes.func\n};\nIdeasList.defaultProps = {\n  ideas: {},\n  handleChangeContent: () => {}\n};\nexport default IdeasList;","map":{"version":3,"sources":["/Users/radu.silaghi/Documents/Projects/clearscore/src/Components/IdeasList.jsx"],"names":["React","Component","PropTypes","classNames","IdeasList","render","Object","keys","props","ideas","map","key","no","text","length","evt","handleChangeContent","bind","propTypes","shape","func","defaultProps"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,YAAP;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAEhCI,EAAAA,MAAM,GAAG;AACP,WACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,KAAvB,EAA8BC,GAA9B,CAAkC,UAASC,GAAT,EAAc;AAC9C,YAAMC,EAAE,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBE,GAAjB,EAAsBE,IAAtB,CAA2BC,MAAtC;AACA,aACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,eAFd;AAGE,QAAA,SAAS,EAAC,aAHZ;AAIE,QAAA,QAAQ,EAAGC,GAAD,IAAS;AAAC,eAAKP,KAAL,CAAWQ,mBAAX,CAA+BL,GAA/B,EAAoCI,GAApC,EAAyC,OAAzC;AAAkD,SAJxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,WAAW,EAAC,cAFd,CAGE;AAHF;AAIE,QAAA,QAAQ,EAAGA,GAAD,IAAS;AAAC,eAAKP,KAAL,CAAWQ,mBAAX,CAA+BL,GAA/B,EAAoCI,GAApC,EAAyC,MAAzC;AAAiD,SAJvE;AAKE,QAAA,SAAS,EAAC,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAcE;AAAM,QAAA,SAAS,EAAEZ,UAAU,CAAC,eAAD,EAAkBS,EAAE,KAAK,GAAP,GAAa,sBAAb,GAAsC,EAAxD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyFA,EAAzF,SAdF,CADF;AAiBD,KAnBiC,CAmBhCK,IAnBgC,CAmB3B,IAnB2B,CAAlC,CAFJ,CADF;AA0BD;;AA7B+B;;AA+BlCb,SAAS,CAACc,SAAV,GAAsB;AACpBT,EAAAA,KAAK,EAAEP,SAAS,CAACiB,KAAV,EADa;AAEpBH,EAAAA,mBAAmB,EAAEd,SAAS,CAACkB;AAFX,CAAtB;AAIAhB,SAAS,CAACiB,YAAV,GAAyB;AACvBZ,EAAAA,KAAK,EAAE,EADgB;AAEvBO,EAAAA,mBAAmB,EAAE,MAAM,CAAE;AAFN,CAAzB;AAIA,eAAeZ,SAAf","sourcesContent":["  \nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport '../App.css';\n\nclass IdeasList extends Component {\n\n  render() {\n    return (\n      <ul className='ideasList'> \n        {\n          Object.keys(this.props.ideas).map(function(key) {\n            const no = this.props.ideas[key].text.length;\n            return (\n              <li className='idea'>\n                <input \n                  type='text' \n                  placeholder='idea title...' \n                  className='idea__title' \n                  onChange={(evt) => {this.props.handleChangeContent(key, evt, 'title')}}\n                />\n                <textarea \n                  className='idea__text' \n                  placeholder='idea text...' \n                  // onChange={no<140 ? (evt) => {this.props.handleChangeContent(key, evt, 'text')} : () => {}}\n                  onChange={(evt) => {this.props.handleChangeContent(key, evt, 'text')}}\n                  maxLength='140'\n                />\n                <span className={classNames('idea__counter', no === 140 ? 'idea__counter--alert' : '')}>{no}/140</span>\n              </li>);\n          }.bind(this))\n        }\n      </ul>\n    )\n  }\n}\nIdeasList.propTypes = {\n  ideas: PropTypes.shape(),\n  handleChangeContent: PropTypes.func\n}\nIdeasList.defaultProps = {\n  ideas: {},\n  handleChangeContent: () => {}\n}\nexport default IdeasList;"]},"metadata":{},"sourceType":"module"}